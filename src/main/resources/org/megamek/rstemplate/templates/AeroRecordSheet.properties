fighterData=FIGHTER DATA
craftData=CRAFT DATA
dropshipData=DROPSHIP DATA
jumpshipData=JUMPSHIP DATA
warshipData=WARSHIP DATA
stationData=STATION DATA
type=Type:
thrust=Thrust:
safeThrust=SafeThrust:
maxThrust=Maximum Thrust:
stationKeeping=Station Keeping Only
tonnage=Tonnage:
techBase=Tech Base:
rulesLevel=Rules Level:
role=Role:
weaponsAndEquipment=Weapons & Equipment Inventory
bv=BV:

notes.title=NOTES

armorPanel.title=ARMOR DIAGRAM
standardScale=Standard Scale
capitalScale=Capital Scale

criticalDamage.title=CRITICAL DAMAGE
avionics=Avionics
fcs=FCS
sensors=Sensors
engine=Engine
gear=Landing Gear
lifeSupport=Life Support
cic=CIC
kfBoom=K-F Boom
dockingCollar=Docking Collar
thrusters=Thrusters
left=Left
right=Right

pilotPanel.title=PILOT DATA
name=Name:
gunnerySkill=Gunnery Skill:
pilotingSkill=Piloting Skill:
dead=Dead
hitsTaken=Hits Taken
consciousnessNum=Consciousness #
modifier=Modifier
incapacitated=Incp.
nCrew=Crew:
nPassengers=Passengers:
nOther=Other:
nMarines=Marines:
nBA=BattleArmor:
lifeBoats=Life Boats/Escape Pods: %d/%d

velocityRecord.title=VELOCITY RECORD
turnNum=Turn #
thrustRecord=Thrust
velocity=Velocity
effectiveVelocity=Effective Velocity
altitude=Altitude

heatPanel.title=HEAT DATA
heat.pilotDamage=Pilot damage, avoid on %d+
heat.fireMod=+%d Modifier to Fire
heat.shutdown=Shutdown, avoid on %d+
heat.ammoExplosion=Ammo Exp avoid on %d+
heat.autoShutdown=Shutdown
heat.randomMovement=Random Movement, avoid on %d+
heatSinks=Heat Sinks:
heatGenerationPerArc=Heat Generation Per Arc:
nose=Nose:
foreSides=Left/Right Fore:
broadsides=Left/Right Broadsides:
aftSides=Left/Right Aft:
aft=Aft:
wings=Left/Right Wing:
wingsRear=Left/Right Wing (Rear):

bombsPanel.title=EXTERNAL STORES/BOMBS
key=Key:
highExplosive=HE - High Explosive
laser=LG - Laser Guided
cluster=C - Cluster
rocket=RL - Rocket Launcher

groundMovementTable.title=GROUND MAP STRAIGHT MOVEMENT
groundMovementTable.minStraightMovement=MINIMUM STRAIGHT MOVEMENT
groundMovementTable.inHexes=(IN HEXES)
groundMovementTable.velocity=VELOCITY
groundMovementTable.fighter=FIGHTER
groundMovementTable.smallCraftFixed=SMALL CRAFT AND FIXED
groundMovementTable.wingSupportVehicle=WING SUPPORT VEHICLES
groundMovementTable.footnote=Velocity above 12 is not possible on ground maps.

fighterReturnTable.title=FIGHTER RETURN TABLE
fighterReturnTable.safeThrust=SAFE THRUST
fighterReturnTable.turnsBeforeReturn=TURNS BEFORE RETURN

advancedVelTable.turn=Turn
advancedVelTable.velocity=Velocity
advancedVelTable.thrust=Thrust
advancedVelTable.facing=Facing
advancedVelTable.fuel=Fuel

advMovementTable.title=ADVANCED MOVEMENT
advMovementTable.1=\    A vector is active if thrust is applied while the unit is facing that hexside.\n\
  A vector is inactive if the unit spends no thrust to move through that\n\
  hexside.
advMovementTable.2=\    Each time a unit spends thrust, note down that number on the record \n\
  sheet in the appropriate vector (the vector of the unit's facing). Next,\n\
  determine the effect of spending thrust by consolidating the active vectors.\n\
  First, consolidate any active opposing vectors (see Opposing Vectors\n\
  diagram) by subtracting the lowest thrust value from both vectors, reducing\n\
  one vector to 0.
advMovementTable.3=\    Next, consolidate the oblique vectors (see Oblique Vectors diagram).\n\
  When any pair of oblique vectors is active, subtract the lowest of the two\n\
  thrust values from both vectors (or from both if they are equal), reducing\n\
  one (or both) oblique vectors to 0, and add the same value to the thrust\n\
  value of the vector in between.
advMovementTable.4=\    After consolidating all vectors, a unit should have no more than two\n\
  active vectors.
advMovementTable.opposingVectors.title=OPPOSING VECTORS
advMovementTable.opposingVectors.text=\tIf both vectors marked with\n\
  arrows are active, subtract an\n\
  equal amount from both until only\n\
  one of them is active.
advMovementTable.obliqueVectors.title=OBLIQUE VECTORS
advMovementTable.obliqueVectors.text=\tIf both vector markers are\n\
  active, subtract an equal amount\n\
  from both and add that amount to\n\
  vector X.
